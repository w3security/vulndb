{
	"npm": {
		"qs": [
			{
				"title": "qs Denial-of-Service Memory Exhaustion",
				"credit": [
					"Dustin Shiver"
				],
				"description": "## Overview:\nThe qs module has the ability to create sparse arrays during parsing. By specifying a high index it is possible to create a large array that will eventually take up all the allocated memory of the running process, resulting in a crash.\n\n_Original description taken from the [Node Security Project](https://nodesecurity.io/)_\n\n## Recommendations:\nUpdate qs to version 1.0.0 or greater\n\n## References:\n- https://github.com/visionmedia/node-querystring/issues/104\n\n",
				"semver": {
					"vulnerable": "<1.0.0",
					"unaffected": ">= 1.x"
				},
				"CVSSv2": "5.0 (MEDIUM) (AV:N/AC:L/Au:N/C:N/I:N/A:P)",
				"CVSSv3": "",
				"severity": "medium",
				"identifiers": {
					"CWE": [
						"CWE-400"
					],
					"CVE": [
						"CVE-2014-7191"
					],
					"NSP": 29
				},
				"info": [
					"https://nodesecurity.io/advisories/29"
				],
				"patches": [
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/qs/20140806/qs_20140806_0_0_43a604b7847e56bba49d0ce3e222fe89569354d8_snyk.patch"
						],
						"version": "<1.0.0 >=0.6.5",
						"modificationTime": "2014-08-06T06:10:22.000Z",
						"comments": [],
						"id": "patch:npm:qs:20140806:0"
					},
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/qs/20140806/qs_20140806_0_1_x_snyk_2.patch"
						],
						"version": "=0.5.6",
						"modificationTime": "2014-08-06T06:10:22.000Z",
						"comments": [],
						"id": "patch:npm:qs:20140806:1"
					}
				],
				"moduleName": "qs",
				"creationTime": "2014-08-06T06:10:22.000Z",
				"publicationTime": "2014-08-06T06:10:22.000Z",
				"modificationTime": "2015-11-06T02:09:36.180Z",
				"id": "npm:qs:20140806"
			},
			{
				"title": "qs Denial-of-Service Extended Event Loop Blocking",
				"credit": [
					"Tom Steele"
				],
				"description": "## Overview:\nThe qs module does not have an option or default for specifying object depth and when parsing a string representing a deeply nested object will block the event loop for long periods of time. An attacker could leverage this to cause a temporary denial-of-service condition, for example, in a web application, other requests would not be processed while this blocking is occurring.\n\n_Original description taken from the [Node Security Project](https://nodesecurity.io/)_\n\n## Recommendations:\nUpdate qs to version 1.0.0 or greater\n",
				"semver": {
					"vulnerable": "<1.0.0",
					"unaffected": ">= 1.x"
				},
				"CVSSv3": "",
				"severity": "medium",
				"identifiers": {
					"CWE": [
						"CWE-400"
					],
					"CVE": [],
					"NSP": 28
				},
				"info": [
					"https://nodesecurity.io/advisories/28"
				],
				"patches": [
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/qs/20140806-1/qs_20140806-1_0_0_snyk.patch"
						],
						"version": "<1.0.0 >=0.6.5",
						"modificationTime": "2014-11-20T06:10:22.000Z",
						"comments": [],
						"id": "patch:npm:qs:20140806-1:0"
					},
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/qs/20140806-1/qs_20140806-1_0_1_snyk.patch"
						],
						"version": "=0.5.6",
						"modificationTime": "2014-11-20T06:10:22.000Z",
						"comments": [],
						"id": "patch:npm:qs:20140806-1:1"
					}
				],
				"moduleName": "qs",
				"creationTime": "2014-08-06T06:10:23.000Z",
				"publicationTime": "2014-08-06T06:10:23.000Z",
				"modificationTime": "2015-11-06T02:09:36.180Z",
				"id": "npm:qs:20140806-1"
			}
		],
		"secure-compare": [
			{
				"title": "Insecure Comparison",
				"credit": [
					"Joshua Dague"
				],
				"creationTime": "2015-11-06T02:09:36.186Z",
				"modificationTime": "2015-11-06T02:09:36.186Z",
				"publicationTime": "2015-10-24T21:00:53.201Z",
				"description": "## Overview\n[secure-compare](https://www.npmjs.com/package/secure-compare) is a node implementation of constant-time comparison algorithm to prevent timing attacks for Node.js.\nThe `compare` function made sure that the length of the two arguments is the same, and then mistakenly compared the first argument to itself, meaning that the function would return true for any two arguments of the same length.\n\n## Recommendation\nUpdate to version 3.0.1 or greater. When direct dependency update is not possible, use [`snyk wizard`](https://snyk.io/docs/using-snyk#wizard) to patch agains this vulnerability.\n\n\n## References\n- https://github.com/vdemedes/secure-compare/pull/1\n",
				"semver": {
					"vulnerable": "<=3.0.0",
					"unaffected": ">3.0.0"
				},
				"CVSSv3": "",
				"severity": "medium",
				"identifiers": {
					"CWE": [],
					"CVE": [],
					"NSP": 50
				},
				"info": [
					"https://nodesecurity.io/advisories/50"
				],
				"patches": [
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/secure-compare/20151024/secure-compare_20151024_0_0_b768f45003dad04743c91747e35df1b0a4c4c897.patch"
						],
						"version": "=3.0.0",
						"modificationTime": "2015-10-24T21:00:53.201Z",
						"comments": [
							"https://github.com/vdemedes/secure-compare/commit/b768f45003dad04743c91747e35df1b0a4c4c897.patch"
						],
						"id": "patch:npm:secure-compare:20151024:0"
					}
				],
				"moduleName": "secure-compare",
				"id": "npm:secure-compare:20151024"
			}
		],
		"tar": [
			{
				"title": "Symlink Arbitrary File Overwrite",
				"credit": [
					"Tim Cuthbertson"
				],
				"creationTime": "2015-11-06T02:09:36.182Z",
				"modificationTime": "2015-11-06T02:09:36.182Z",
				"publicationTime": "2015-11-03T07:15:12.900Z",
				"description": "## Overview\nThe [`tar`](https://www.npmjs.com/package/tar) module does not properly normalize symbolic links pointing to targets outside the extraction root. As a result, packages may hold symbolic links to parent and sibling directories and overwrite those files when the package is extracted.\n\n## Recommendation\nUpdate to version 2.0.0 or greater. \nIf a direct dependency update is not possible, use [`snyk wizard`](https://snyk.io/docs/using-snyk#wizard) to patch this vulnerability.\n\n## References\n- https://github.com/npm/node-tar/commit/5e6356e0ca256cba659ff24d0befbfe753a04cb6\n- https://github.com/npm/npm/releases/tag/v2.7.5\n",
				"semver": {
					"vulnerable": "<2.0.0",
					"unaffected": ">=2.0.0"
				},
				"CVSSv3": "",
				"severity": "high",
				"identifiers": {
					"CWE": [],
					"CVE": [],
					"NSP": 57
				},
				"info": [
					"https://nodesecurity.io/advisories/57"
				],
				"patches": [
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/tar/20151103/tar_20151103_0_0_a5337a6cd58a2d800fc03b3781a25751cf459f28_snyk.patch"
						],
						"version": "<2.0.0 >=0.1.13",
						"modificationTime": "2015-11-17T09:29:10.000Z",
						"comments": [
							"https://github.com/npm/node-tar/commit/a5337a6cd58a2d800fc03b3781a25751cf459f28.patch"
						],
						"id": "patch:npm:tar:20151103:0"
					},
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/tar/20151103/tar_20151103_0_1_a5337a6cd58a2d800fc03b3781a25751cf459f28_snyk.patch"
						],
						"version": "<0.1.13 >0.0.1",
						"modificationTime": "2015-11-17T09:29:10.000Z",
						"comments": [
							"https://github.com/npm/node-tar/commit/a5337a6cd58a2d800fc03b3781a25751cf459f28.patch"
						],
						"id": "patch:npm:tar:20151103:1"
					}
				],
				"moduleName": "tar",
				"id": "npm:tar:20151103"
			}
		],
		"uglify-js": [
			{
				"title": "uglify-js incorrectly handles non-boolean comparisons during minification",
				"credit": [
					"Tom MacWright"
				],
				"description": "## Overview:\n[Tom MacWright](https://github.com/mishoo/UglifyJS2/issues/751) discovered that UglifyJS versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted Javascript file to have altered functionality after minification. This bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [Yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\n\n_Original description taken from the [Node Security Project](https://nodesecurity.io/)_\n\n\n### Details:\n\nIn Boolean algebra, DeMorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\nIn Javascript form, they state that:\n !(a && b) === (!a) || (!b)\n !(a || b) === (!a) && (!b)\n\nThe law does not hold true when one of the values is not a boolean however.\n\nVulnerable versions of UglifyJS do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\n\nConsider this authentication function:\n\n```\nfunction isTokenValid(user) {\n    var timeLeft =\n        !!config && // config object exists\n        !!user.token && // user object has a token\n        !user.token.invalidated && // token is not explicitly invalidated\n        !config.uninitialized && // config is initialized\n        !config.ignoreTimestamps && // don't ignore timestamps\n        getTimeLeft(user.token.expiry); // > 0 if expiration is in the future\n\n    // The token must not be expired\n    return timeLeft > 0;\n}\n\nfunction getTimeLeft(expiry) {\n  return expiry - getSystemTime();\n}\n```\nWhen minified with a vulnerable version of UglifyJS, it will produce the following insecure output, where a token will never expire:\n\n( Formatted for readability )\n\n```\nfunction isTokenValid(user) {\n    var timeLeft = !(                       // negation\n        !config                             // config object does not exist\n        || !user.token                      // user object does not have a token\n        || user.token.invalidated           // token is explicitly invalidated\n        || config.uninitialized             // config isn't initialized\n        || config.ignoreTimestamps          // ignore timestamps\n        || !getTimeLeft(user.token.expiry)  // > 0 if expiration is in the future\n    );\n    return timeLeft > 0\n}\n\nfunction getTimeLeft(expiry) {\n    return expiry - getSystemTime()\n}\n```\n\n## Recommendations:\n\nUpgrade UglifyJS to version >= 2.4.24.\n\n## References:\n- https://zyan.scripts.mit.edu/blog/backdooring-js/\n- https://github.com/mishoo/UglifyJS2/issues/751\n",
				"semver": {
					"vulnerable": "<= 2.4.23",
					"unaffected": ">= 2.4.24"
				},
				"CVSSv3": "",
				"severity": "medium",
				"identifiers": {
					"CWE": [
						"CWE-95"
					],
					"CVE": [],
					"NSP": 39
				},
				"info": [
					"https://github.com/mishoo/UglifyJS2/issues/751",
					"https://github.com/tmcw/mdast-uglify-bug"
				],
				"patches": [
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/uglify-js/20150824/uglify-js_20150824_0_0_905b6011784ca60d41919ac1a499962b7c1d4b02_snyk.patch"
						],
						"version": "<= 2.4.23 >2.0.0",
						"modificationTime": "2015-08-24T09:29:10.000Z",
						"comments": [],
						"id": "patch:npm:uglify-js:20150824:0"
					}
				],
				"moduleName": "uglify-js",
				"creationTime": "2015-08-24T09:29:10.000Z",
				"publicationTime": "2015-08-24T09:29:10.000Z",
				"modificationTime": "2015-11-06T02:09:36.180Z",
				"id": "npm:uglify-js:20150824"
			},
			{
				"title": "Regular Expression Denial of Service",
				"credit": [
					"Adam Baldwin"
				],
				"creationTime": "2015-11-06T02:09:36.186Z",
				"modificationTime": "2015-11-06T02:09:36.186Z",
				"publicationTime": "2015-10-24T21:01:32.155Z",
				"description": "## Overview\n`parse()` function in [`uglify-js`](https://www.npmjs.com/package/uglify-js) module is vulnerable to regular expression denial of service (ReDoS) attacks when long inputs of certain patters are processed.\n\n\"The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)\n\n\n## Recommendation\nUpdate to version 2.6.0 or greater. \nIf a direct dependency update is not possible, use `snyk wizard` to patch this vulnerability.\n\n## References\n- https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n",
				"semver": {
					"vulnerable": "<2.6.0",
					"unaffected": ">=2.6.0"
				},
				"CVSSv3": "",
				"severity": "low",
				"identifiers": {
					"CWE": [
						"CWE-400"
					],
					"CVE": [],
					"NSP": 48
				},
				"info": [
					"https://nodesecurity.io/advisories/48"
				],
				"patches": [
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"
						],
						"version": "<= 2.4.23 >=2.2.0",
						"modificationTime": "2015-11-16T09:29:10.000Z",
						"comments": [
							"https://github.com/mishoo/UglifyJS2/commit/63d35f8.patch"
						],
						"id": "patch:npm:uglify-js:20151024:0"
					},
					{
						"urls": [
							"https://s3.amazonaws.com/snyk-rules-pre-repository/snapshots/master/patches/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"
						],
						"version": "<2.6.0 >2.4.23",
						"modificationTime": "2015-11-16T09:29:10.000Z",
						"comments": [
							"https://github.com/mishoo/UglifyJS2/commit/63d35f8.patch"
						],
						"id": "patch:npm:uglify-js:20151024:1"
					}
				],
				"moduleName": "uglify-js",
				"id": "npm:uglify-js:20151024"
			}
		]
	}
}