// Code derived from https://github.com/aheckmann/gm

// https://github.com/aheckmann/gm#license
/*
(The MIT License)

Copyright (c) 2010 Aaron Heckmann

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

--- a/lib/compare.js	2015-11-06 17:41:26.000000000 +0200
+++ b/lib/compare.js	2015-11-06 17:49:30.000000000 +0200
@@ -1,7 +1,6 @@
 // compare
 
-var exec = require('child_process').exec;
-var utils = require('./utils');
+var spawn = require('child_process').spawn;
 
 /**
  * Compare two images uses graphicsmagicks `compare` command.
@@ -20,13 +19,11 @@
 
 module.exports = exports = function (proto) {
   function compare(orig, compareTo, options, cb) {
-    orig = utils.escape(orig);
-    compareTo = utils.escape(compareTo);
 
     var isImageMagick = this._options && this._options.imageMagick;
     // compare binary for IM is `compare`, for GM it's `gm compare`
     var bin = isImageMagick ? '' : 'gm ';
-    var execCmd = bin + 'compare -metric mse ' + orig + ' ' + compareTo;
+    var args = ['compare', '-metric', 'mse', orig, compareTo]
     var tolerance = 0.4
     // outputting the diff image
     if (typeof options === 'object') {
@@ -34,28 +31,33 @@
         if (typeof options.file !== 'string') {
           throw new TypeError('The path for the diff output is invalid');
         }
-         // graphicsmagick defaults to red
-        var highlightColorOption = options.highlightColor
-          ? ' -highlight-color ' + options.highlightColor + ' '
-          : ' ';
-        var highlightStyleOption = options.highlightStyle
-          ? ' -highlight-style ' + options.highlightStyle + ' '
-          : ' ';
-        var diffFilename = utils.escape(options.file);
+        // graphicsmagick defaults to red
+        if (options.highlightColour) {
+          args.push('-highlight-color');
+          args.push(options.highlightColor);
+        }
+        if (options.highlightStyle) {
+          args.push('-highlight-style')
+          args.push(options.highlightStyle)
+        }
         // For IM, filename is the last argument. For GM it's `-file <filename>`
-        var diffOpt = isImageMagick ? diffFilename : ('-file ' + diffFilename);
-        execCmd += highlightColorOption + highlightStyleOption  + ' ' + diffOpt;
+        if (isImageMagick) {
+          args.push('-file');
+        }
+        args.push(options.file);
       }
-      
+
       if (options.tolerance) {
         if (typeof options.tolerance !== 'number') {
           throw new TypeError('The tolerance value should be a number');
         }
         tolerance = options.tolerance;
-      } 
+      }
     } else {
       // For ImageMagick diff file is required but we don't care about it, so null it out
-      isImageMagick && (execCmd += ' null:');
+      if (isImageMagick) {
+        args.push('null:');
+      }
 
       if (typeof options == 'function') {
         cb = options; // tolerance value not provided, flip the cb place
@@ -64,20 +66,29 @@
       }
     }
 
-    exec(execCmd, function (err, stdout, stderr) {
+    var proc = spawn('/usr/bin/gm', args);
+    var stdout = '';
+    var stderr = '';
+    proc.stdout.on('data',function(data) { stdout+=data });
+    proc.stderr.on('data',function(data) { stderr+=data });
+    proc.on('close', function (code) {
       // ImageMagick returns err code 2 if err, 0 if similar, 1 if dissimilar
       if (isImageMagick) {
-        if (!err) {
+        if (code === 0) {
           return cb(null, 0 <= tolerance, 0, stdout);
         }
-        if (err.code === 1) {
+        else if (code === 1) {
           err = null;
           stdout = stderr;
+        } else {
+        return cb(stderr);
+        }
+      } else {
+        if(code !== 0) {
+          return cb(stderr);
         }
       }
-      if (err) {
-        return cb(err);
-      }
+      
       // Since ImageMagick similar gives err code 0 and no stdout, there's really no matching
       // Otherwise, output format for IM is `12.00 (0.123)` and for GM it's `Total: 0.123`
       var regex = isImageMagick ? /\((\d+\.?[\d\-\+e]*)\)/m : /Total: (\d+\.?\d*)/m;
@@ -88,7 +99,7 @@
       }
 
       var equality = parseFloat(match[1]);
-      cb(null, equality <= tolerance, equality, stdout);
+      cb(null, equality <= tolerance, equality, stdout, orig, compareTo);
     });
   }
 
@@ -97,4 +108,3 @@
   }
   return compare;
 };
-
